{"version":3,"sources":["services/API.ts","redux/actions/shows/showsActions.ts","redux/actions/movies/movieActions.ts","components/Search.tsx","components/movies/MoviesListItem.tsx","components/Pager.tsx","components/movies/MoviesList.tsx","assets/logo.svg","assets/shows-logo.svg","components/HeaderPanel.tsx","components/movies/MoviesListItemPage.tsx","components/Slider.tsx","assets/aquaman.jpg","assets/transformers_final.jpg","assets/tenet.jpg","assets/sw.jpg","assets/valerian.jpg","assets/arrival.jpg","assets/godzila.jpg","assets/mandalorian.jpg","components/shows/ShowsListItem.tsx","components/shows/ShowsList.tsx","components/shows/CastListItem.tsx","components/shows/CastList.tsx","components/shows/ShowsListItemPage.tsx","components/App.tsx","redux/reducers/movies/MovieSearchResult.ts","redux/reducers/currentItem.ts","redux/reducers/shows/ShowsSearchResult.ts","redux/reducers.ts","redux/store.ts","index.tsx"],"names":["httpRequestMovies","params","fetch","then","res","json","catch","error","httpRequestShows","searchMoviesByQueryDispatcher","query","dispatch","title","page","response","type","payload","withRouter","connect","state","Error","movieSearchResult","searchMoviesByQuery","searchShowsByQuery","clearError","props","history","useState","inputValue","setInputValue","category","setCategory","onSubmit","e","preventDefault","push","align","justify","style","marginTop","FormControl","InputLabel","id","Select","labelId","value","onChange","event","target","MenuItem","autoComplete","marginLeft","TextField","label","placeholder","trim","helperText","IconButton","color","onClick","border","Meta","Card","searchById","searchMovieByIdDispatcher","item","to","imdbID","Title","hoverable","width","margin","cover","src","Poster","height","preview","description","Type","Year","showsSearchResult","currentMoviesPage","get","currentShowsPage","totalMoviesResults","totalShowsResults","isPathShows","location","pathname","includes","wrap","total","showSizeChanger","showQuickJumper","hideOnSinglePage","pageSize","responsive","selectedPage","onChangePage","current","list","listRef","useRef","useEffect","scrollIntoView","behavior","ref","map","idx","Header","Layout","HeaderPanel","padding","zIndex","backgroundColor","href","logo","alt","logo3","contentStyle","currentItem","image","country","actors","director","genre","awards","boxOffice","production","writer","release","language","runtime","summary","rating","Object","keys","length","marginBottom","display","disabled","allowHalf","Math","round","count","size","column","maxWidth","Item","images","aquaman","transformers_final","tenet","sw","valerian","arrival","godzila","mandalorian","Slider","autoplay","effect","el","searchShowsByIdDispatcher","name","imageOriginal","imageMedium","slice","CastListItem","actorName","actorBirthday","charName","maxHeight","CardContent","flex","Typography","variant","CastList","cast","textAlign","actor","getCastByShowId","status","officialSite","genres","join","scheduleTime","scheduleDays","timezone","dangerouslySetInnerHTML","__html","Content","Footer","App","basename","process","className","background","minHeight","Container","exact","path","initialState","totalResults","info","rootReducer","combineReducers","action","Search","show","console","log","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f26055d8.chunk.js","sourcesContent":["export function httpRequestMovies(params:string) {\n  return fetch(`http://www.omdbapi.com/?apikey=331b7984${params}`)\n  .then(res => res.json())\n  .then(res => res)\n  .catch(error => error)\n}\n\nexport function httpRequestShows(params:string) {\n  return fetch(`http://api.tvmaze.com/${params}`)\n  .then(res => res.json())\n  .then(res => res)\n  .catch(error => error)\n}\n","import {httpRequestShows} from '../../../services/API'\nimport {Dispatch} from \"redux\";\n\ninterface IQuery {\n  title: string;\n  page: number;\n}\n\nexport const searchShowsByQueryDispatcher = (query: IQuery) => {\n\n  return (dispatch: Dispatch) => {\n    httpRequestShows(`search/shows?&q=${query.title}`)\n      .then(response => {\n        dispatch({\n          type: 'SHOW_BY_QUERY',\n          payload: {\n            title: query.title,\n            page: query.page,\n            response\n          }\n        })\n      })\n  }\n}\n\nexport const searchShowsByIdDispatcher = (id: number) => {\n  return (dispatch: Dispatch) => {\n    httpRequestShows(`shows/${id}`)\n      .then((res) => {\n        dispatch({\n          type: 'BY_ID',\n          payload: res\n        })\n      })\n  }\n}\n\nexport const getCastByShowIdDispatcher = (id: number) => {\n  return (dispatch: Dispatch) => {\n    httpRequestShows(`shows/${id}/cast`)\n      .then((res) => {\n        dispatch({\n          type: 'CAST',\n          payload: res\n        })\n      })\n  }\n}\n","import { httpRequestMovies } from '../../../services/API'\nimport { Dispatch } from \"redux\";\n\ninterface IQuery {\n  title:string;\n  page:number;\n}\n\nexport const searchMoviesByQueryDispatcher = (query:IQuery) => {\n\n  return (dispatch:Dispatch) => {\n    httpRequestMovies(`&s=${query.title}&page=${query.page || 1}`)\n    .then((response:any) => {\n      dispatch({\n        type: 'BY_QUERY',\n        payload: {\n          title: query.title,\n          page: query.page,\n          response\n        }\n      })\n    })\n  }\n}\n\nexport const searchMovieByIdDispatcher = (id:string) => {\n  return (dispatch:Dispatch) => {\n    httpRequestMovies(`&i=${id}&plot=full`)\n    .then((res) => {\n      dispatch({\n        type: 'BY_ID',\n        payload: res\n      })\n    })\n  }\n}\n\nexport const clearErrorDispatcher = () => {\n  return {\n    type: 'CLEAR_ERROR'\n  }\n}\n","import React, {useState} from 'react'\nimport {connect} from 'react-redux'\nimport {Row} from 'antd'\nimport {FormControl, IconButton, InputLabel, Select, TextField} from '@material-ui/core'\nimport SearchIcon from '@material-ui/icons/Search'\nimport MenuItem from '@material-ui/core/MenuItem';\nimport {searchShowsByQueryDispatcher} from \"../redux/actions/shows/showsActions\";\nimport {withRouter} from \"react-router\";\nimport {clearErrorDispatcher, searchMoviesByQueryDispatcher} from \"../redux/actions/movies/movieActions\";\n\ninterface IProps {\n  history: {\n    push: (val: string) => void;\n    location: {\n      pathname: string;\n    }\n  };\n  searchMoviesByQuery: (p: { title: string; page?: number }) => void;\n  searchShowsByQuery: (p: { title: string; page?: number }) => void;\n  Error: string;\n  clearError: () => void;\n}\n\ninterface IEvent {\n  target: {\n    value: string\n  }\n}\n\nfunction Search(props: IProps) {\n  const {searchMoviesByQuery, searchShowsByQuery, Error, clearError, history} = props\n  const [inputValue, setInputValue] = useState('')\n  const [category, setCategory] = useState(0)\n\n  const onChangeInput = (e: IEvent) => {\n    clearError()\n    setInputValue(e.target.value.trim())\n  }\n\n  const onChangeCategory = (event: any) => setCategory(event.target.value)\n\n  const onSubmit = (e: React.FormEvent) => {\n    e.preventDefault()\n\n    if (category) {\n      history.push('/shows')\n      searchShowsByQuery({title: inputValue})\n    } else {\n      history.push('/movies')\n      searchMoviesByQuery({title: inputValue})\n    }\n  }\n\n  return (\n    <Row align='bottom' justify={'center'} style={{marginTop: 30}}>\n      <FormControl>\n        <InputLabel id=\"select-label\">Category</InputLabel>\n        <Select\n          labelId=\"select-label\"\n          id=\"select\"\n          value={category}\n          onChange={onChangeCategory}\n        >\n          <MenuItem value={0}>Movies</MenuItem>\n          <MenuItem value={1}>Shows</MenuItem>\n        </Select>\n      </FormControl>\n      <form onSubmit={onSubmit} autoComplete=\"off\" style={{marginLeft: '10px'}}>\n        <FormControl>\n          <TextField\n            id=\"search-field\"\n            label=\"Search\"\n            placeholder=\"Enter movie title\"\n            onChange={onChangeInput}\n            error={!!Error}\n            helperText={Error}\n            onSubmit={onSubmit}\n          />\n        </FormControl>\n      </form>\n      <IconButton\n        color=\"inherit\"\n        onClick={onSubmit}\n        style={{border: '1px solid lightgrey'}}\n      >\n        <SearchIcon/>\n      </IconButton>\n    </Row>\n  )\n}\n\nconst mapStateToProps = (state: any) => ({\n  Error: state.movieSearchResult.error\n})\n\nconst mapDispatchToProps = (dispatch: any) => ({\n  searchMoviesByQuery: (payload: any) => dispatch(searchMoviesByQueryDispatcher(payload)),\n  searchShowsByQuery: (payload: any) => dispatch(searchShowsByQueryDispatcher(payload)),\n  clearError: () => dispatch(clearErrorDispatcher())\n})\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Search))\n","import React from 'react'\nimport { Card, Col, Image, Row } from 'antd'\nimport { Link } from 'react-router-dom'\nimport { searchMovieByIdDispatcher } from '../../redux/actions/movies/movieActions'\nimport { connect } from 'react-redux'\nimport {IMovieListItem} from \"../types\";\n\nconst { Meta } = Card\n\ninterface IProps {\n    item: IMovieListItem;\n    searchById: (id: string) => void\n}\n\nfunction MoviesListItem ({ item, searchById }:IProps) {\n\n  return (\n    <>\n      <Row justify='center'>\n        <Link to={`/movies/${item.imdbID}`}>\n          <Col title={item.Title} onClick={() => searchById(item.imdbID)}>\n            <Card\n              hoverable={true}\n              style={{ width: 240, margin: 20 }}\n              cover={\n                <Image\n                  placeholder\n                  src={item.Poster === 'N/A' ? 'error' : item.Poster}\n                  height={320}\n                  preview={false}\n                />\n              }\n            >\n              <Meta\n                title={item.Title}\n                description={\n                  <Row justify='space-between'>\n                    <Col>{item.Type}</Col>\n                    <Col>{item.Year}</Col>\n                  </Row>\n                }\n              />\n            </Card>\n          </Col>\n        </Link>\n      </Row>\n    </>\n  )\n}\n\nconst mapDispatchToProps = (dispatch:any) => ({\n  searchById: (id: string) => dispatch(searchMovieByIdDispatcher(id))\n})\n\nexport default connect(null, mapDispatchToProps)(MoviesListItem)\n","import React from 'react'\nimport {Pagination, Row} from 'antd'\nimport {connect} from 'react-redux'\nimport {get} from 'lodash'\nimport {searchMoviesByQueryDispatcher} from '../redux/actions/movies/movieActions'\nimport {IMovieListItem, IShowsItem} from \"./types\";\nimport {withRouter} from \"react-router\";\n\ninterface IProps {\n  movieSearchResult: IMovieListItem[];\n  showsSearchResult: IShowsItem[];\n  searchMoviesByQuery: (payload: IQuery) => void;\n  history: {\n    location: {\n      pathname: string;\n    }\n  };\n}\n\ninterface IQuery {\n  title: string;\n  page: number;\n}\n\nfunction Pager(props: IProps) {\n  const {movieSearchResult, showsSearchResult, searchMoviesByQuery, history} = props;\n  const currentMoviesPage = get(props, 'movieSearchResult.page', 1);\n  const currentShowsPage = get(props, 'currentShowsPage.page', 1);\n  const totalMoviesResults = get(props, 'movieSearchResult.totalResults', 0);\n  const totalShowsResults = get(props, 'movieSearchResult.totalResults', 0);\n  const title = get(movieSearchResult, 'title', '');\n  const isPathShows = history.location.pathname.includes('/shows');\n\n  const onChangePage = (selectedPage: number) => {\n    searchMoviesByQuery({title, page: selectedPage})\n  }\n\n  return (\n    <Row wrap={false} style={{margin: '10px 0px 30px'}}>\n      <Pagination\n        total={isPathShows ? totalShowsResults : totalMoviesResults}\n        showSizeChanger={false}\n        showQuickJumper\n        hideOnSinglePage\n        pageSize={10}\n        responsive\n        onChange={(selectedPage) => onChangePage(selectedPage)}\n        current={isPathShows ? currentShowsPage : currentMoviesPage}\n      />\n    </Row>\n  )\n}\n\nconst mapStateToProps = (state: any) => ({\n  movieSearchResult: state.movieSearchResult,\n  showsSearchResult: state.showsSearchResult\n})\n\nconst mapDispatchToProps = (dispatch: any) => ({\n  searchMoviesByQuery: (payload: IQuery) => dispatch(searchMoviesByQueryDispatcher(payload))\n})\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Pager))\n","import React, { useEffect, useRef } from 'react'\nimport { Row } from 'antd'\nimport MoviesListItem from './MoviesListItem'\nimport { connect } from 'react-redux'\nimport {IMovieListItem} from \"../types\";\nimport Pager from \"../Pager\";\n\ninterface IProps {\n  list: IMovieListItem[];\n}\n\nfunction MoviesList({list}:IProps) {\n  const listRef:any = useRef(null)\n\n  useEffect(() => {\n    listRef.current.scrollIntoView({ behavior: 'smooth'})\n  },[list])\n\n  return (\n    <>\n      <Row ref={listRef} justify={'center'} style={{marginTop: 30}}>\n        {\n          list.map((item, idx) => <MoviesListItem key={idx} item={item}/>)\n        }\n      </Row>\n      <Row justify={'center'}>\n        <Pager/>\n      </Row>\n    </>\n\n  );\n}\n\nconst mapStateToProps = (state:any) => ({\n  list: state.movieSearchResult.list,\n})\n\nexport default connect(mapStateToProps)(MoviesList);\n","export default __webpack_public_path__ + \"static/media/logo.eeb0ccf4.svg\";","export default __webpack_public_path__ + \"static/media/shows-logo.3393dd63.svg\";","import * as React from 'react'\nimport { Row, Layout } from 'antd'\nimport logo from '../assets/logo.svg'\nimport logo3 from '../assets/shows-logo.svg'\n\nconst { Header } = Layout\n\nfunction HeaderPanel () {\n\n  return (\n\n    <Header style={{padding: 0}}>\n      <Row\n        justify={'space-around'}\n        style={{\n          zIndex: 1,\n          width: '100%',\n          backgroundColor: 'rgb(22 18 39)',\n          color: 'white'\n        }}>\n        <a href=\"/movies\">\n          <img src={logo} alt=\"\" height={'73vw'}/>\n        </a>\n        <a href=\"/shows\">\n          <img src={logo3} alt=\"\" height={'73vw'}/>\n        </a>\n      </Row>\n    </Header>\n  )\n}\n\nexport default HeaderPanel\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Row, Image, Descriptions, Rate, Empty } from 'antd'\nimport {IMovieItemPage} from \"../types\";\nimport {get} from \"lodash\";\n\ninterface IProps {\n  item: IMovieItemPage;\n}\n\nfunction MoviesListItemPage (props:IProps) {\n  const title = get(props, 'item.info.Title', '');\n  const image = get(props, 'item.info.Poster', '');\n  const country = get(props, 'item.info.Country', '');\n  const actors = get(props, 'item.info.Actors', '');\n  const director = get(props, 'item.info.Director', '');\n  const genre = get(props, 'item.info.Genre', '');\n  const awards = get(props, 'item.info.Awards', '');\n  const boxOffice = get(props, 'item.info.BoxOffice', '');\n  const production = get(props, 'item.info.Production', '');\n  const writer = get(props, 'item.info.Writer', '');\n  const release = get(props, 'item.info.Released', '');\n  const language = get(props, 'item.info.Language', '');\n  const runtime = get(props, 'item.info.Runtime', null);\n  const summary = get(props, 'item.info.Plot', '');\n  const rating = get(props, 'item.info.imdbRating', null);\n\n  if (!Object.keys(props.item).length) return <Empty/>\n\n  return (\n    <>\n      <Row justify='center' style={{ marginTop: 130, marginBottom: 30 }}>\n        <h1>{title}</h1>\n      </Row>\n      <Row justify='space-around'>\n        <div>\n          <Image\n            src={image}\n            preview={false}\n            width={350}\n            placeholder\n          />\n          <div>IMDb Rating </div>\n          <Rate\n            style={{ display: 'block' }}\n            disabled\n            allowHalf\n            value={Math.round(rating * 2) / 2}\n            count={10}\n          />\n        </div>\n        <Descriptions size='default' column={1} style={{ maxWidth: '600px' }}>\n          <Descriptions.Item label={<b>Released</b>}>{release}</Descriptions.Item>\n          <Descriptions.Item label={<b>Country</b>}>{country}</Descriptions.Item>\n          <Descriptions.Item label={<b>Actors</b>}>{actors}</Descriptions.Item>\n          <Descriptions.Item label={<b>Director</b>}>{director}</Descriptions.Item>\n          <Descriptions.Item label={<b>Genre</b>}>{genre}</Descriptions.Item>\n          <Descriptions.Item label={<b>Awards</b>}>{awards}</Descriptions.Item>\n          <Descriptions.Item label={<b>Budget</b>}>{boxOffice}</Descriptions.Item>\n          <Descriptions.Item label={<b>Language</b>}>{language}</Descriptions.Item>\n          <Descriptions.Item label={<b>Production</b>}>{production}</Descriptions.Item>\n          <Descriptions.Item label={<b>Duration</b>}>{runtime}</Descriptions.Item>\n          <Descriptions.Item label={<b>Writer</b>}>{writer}</Descriptions.Item>\n        </Descriptions>\n        <div style={{ margin: 30 }}>{summary}</div>\n      </Row>\n    </>\n  )\n}\n\nconst mapStateToProps = (state:any) => ({\n  item: state.currentItem\n})\n\nexport default connect(mapStateToProps)(MoviesListItemPage)\n","import { Carousel, Image } from 'antd'\nimport aquaman from '../assets/aquaman.jpg'\nimport transformers_final from '../assets/transformers_final.jpg'\nimport tenet from '../assets/tenet.jpg'\nimport sw from '../assets/sw.jpg'\nimport valerian from '../assets/valerian.jpg'\nimport arrival from '../assets/arrival.jpg'\nimport godzila from '../assets/godzila.jpg'\nimport mandalorian from '../assets/mandalorian.jpg'\n\nenum contentStyle {\n  textAlign = 'center',\n  background = '#364d79',\n};\n\nconst images = [aquaman, transformers_final, tenet, sw, valerian, arrival, godzila, mandalorian]\n\nexport function Slider(){\n\n  return (\n    <Carousel autoplay effect='fade'>\n      {\n        images.map((el, idx) => (\n          <div key={idx} style={contentStyle}>\n            <Image src={el} preview={false} width='100%'/>\n          </div>\n        ))\n      }\n    </Carousel>\n  )\n}\n","export default __webpack_public_path__ + \"static/media/aquaman.4d4d3534.jpg\";","export default __webpack_public_path__ + \"static/media/transformers_final.cb77b375.jpg\";","export default __webpack_public_path__ + \"static/media/tenet.de31a3be.jpg\";","export default __webpack_public_path__ + \"static/media/sw.ea35ce9a.jpg\";","export default __webpack_public_path__ + \"static/media/valerian.1f583162.jpg\";","export default __webpack_public_path__ + \"static/media/arrival.9b9574b8.jpg\";","export default __webpack_public_path__ + \"static/media/godzila.89919299.jpg\";","export default __webpack_public_path__ + \"static/media/mandalorian.c6cd2f65.jpg\";","import React from 'react'\nimport {Card, Col, Image, Row} from 'antd'\nimport {Link} from 'react-router-dom'\nimport {connect} from 'react-redux'\nimport {IShowsItem} from \"../types\";\nimport {get} from 'lodash'\nimport {searchShowsByIdDispatcher} from \"../../redux/actions/shows/showsActions\";\n\nconst {Meta} = Card\n\ninterface IProps {\n  item: IShowsItem;\n  searchById: (id: number) => void\n}\n\nfunction ShowsListItem(props: IProps) {\n  const {searchById} = props;\n  const id = get(props, 'item.id', null);\n  const name = get(props, 'item.name', '');\n  const imageOriginal = get(props, 'item.image.original', '');\n  const imageMedium = get(props, 'item.image.medium', '');\n  const type = get(props, 'item.type', '');\n  const release = get(props, 'item.premiered', '');\n\n  return (\n    <>\n      <Row justify='center'>\n        <Link to={`/shows/${id}`}>\n          <Col\n            title={name}\n            onClick={() => searchById(id)}\n          >\n            <Card\n              hoverable={true}\n              style={{width: 240, margin: 20}}\n              cover={\n                <Image\n                  placeholder\n                  src={imageMedium || imageOriginal}\n                  height={320}\n                  preview={false}\n                />\n              }\n            >\n              <Meta\n                title={name}\n                description={\n                  <Row justify='space-between'>\n                    <Col>{type}</Col>\n                    <Col>{release && release.slice(0, 4)}</Col>\n                  </Row>\n                }\n              />\n            </Card>\n          </Col>\n        </Link>\n      </Row>\n    </>\n  )\n}\n\nconst mapDispatchToProps = (dispatch: any) => ({\n  searchById: (id: number) => dispatch(searchShowsByIdDispatcher(id))\n})\n\nexport default connect(null, mapDispatchToProps)(ShowsListItem)\n","import React, {useEffect, useRef} from 'react'\nimport {Row} from 'antd'\nimport {connect} from 'react-redux'\nimport ShowsListItem from \"./ShowsListItem\";\nimport {IShowsItem} from \"../types\";\n\ninterface IProps {\n  list: IShowsItem[];\n}\n\nfunction ShowsList({list}: IProps) {\n  const listRef: any = useRef(null)\n\n  useEffect(() => {\n    listRef.current.scrollIntoView({behavior: 'smooth'})\n  }, [list])\n\n  return (\n    <Row ref={listRef} justify={'center'} style={{marginTop: 30}}>\n      {\n        list.map((item, idx) => <ShowsListItem key={idx} item={item}/>)\n      }\n    </Row>\n  );\n}\n\nconst mapStateToProps = (state: any) => ({\n  list: state.showsSearchResult.list,\n})\n\nexport default connect(mapStateToProps)(ShowsList);\n","import React from 'react'\nimport {get} from \"lodash\";\nimport {ICastItem} from \"../types\";\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\n\ninterface IProps {\n  actor: ICastItem;\n}\n\nfunction CastListItem(props: IProps) {\n  const image = get(props, 'actor.person.image.medium', '');\n  const actorName = get(props, 'actor.person.name', '');\n  const actorBirthday = get(props, 'actor.person.birthday', '');\n  const charName = get(props, 'actor.character.name', '');\n\n  return (\n    <Card style={{display: 'flex', margin: 15, width: 300, height: 180}}>\n      {\n        image &&\n        <img\n          style={{maxWidth: '100%', maxHeight: '100%'}}\n          src={image || 'error'}\n          title=\"Live from space album cover\"\n        />\n      }\n      <CardContent style={{flex: '1 0 auto', maxWidth: 180}}>\n        <h3>{actorName}</h3>\n        <Typography variant=\"subtitle1\" color=\"textSecondary\">\n          <b>as:</b> {charName}\n        </Typography>\n        <Typography variant=\"subtitle1\" color=\"textSecondary\">\n          <b>BD:</b> {actorBirthday || 'N/A'}\n        </Typography>\n      </CardContent>\n    </Card>\n  );\n}\n\nexport default CastListItem;\n","import React from 'react'\nimport {ICastItem} from \"../types\";\nimport {Row} from \"antd\";\nimport {get} from \"lodash\";\nimport CastListItem from \"./CastListItem\";\n\ninterface IProps {\n  cast: ICastItem[];\n}\n\nfunction CastList(props: IProps) {\n  const cast = get(props, 'cast', []);\n\n  return (\n    <>\n      <h1 style={{textAlign: 'center'}}>\n        CAST\n      </h1>\n      <Row justify='center' style={{marginBottom: 30}}>\n        {\n          cast.length ?\n            cast.map((actor: ICastItem, idx: number) => <CastListItem key={idx} actor={actor}/>)\n            : 'N/A'\n        }\n      </Row>\n    </>\n  );\n}\n\nexport default CastList;\n","import React, {useEffect} from 'react'\nimport {connect} from \"react-redux\";\nimport {Row, Image, Descriptions, Rate, Empty} from 'antd'\nimport {ICastItem, IShowsItem} from \"../types\";\nimport {get} from \"lodash\";\nimport {getCastByShowIdDispatcher} from \"../../redux/actions/shows/showsActions\";\nimport CastList from './CastList';\n\ninterface IProps {\n  item: {\n    info: IShowsItem;\n    cast: ICastItem[];\n  };\n  getCastByShowId: (id: number) => void;\n}\n\nfunction ShowsListItemPage(props: IProps) {\n  const {getCastByShowId} = props;\n  const cast = get(props, 'item.cast', []);\n  const id = get(props, 'item.info.id', '');\n  const name = get(props, 'item.info.name', '');\n  const imageOriginal = get(props, 'item.info.image.original', '');\n  const imageMedium = get(props, 'item.info.image.medium', '');\n  const release = get(props, 'item.info.premiered', '');\n  const language = get(props, 'item.info.language', '');\n  const runtime = get(props, 'item.info.runtime', null);\n  const status = get(props, 'item.info.status', '');\n  const summary = get(props, 'item.info.summary', '');\n  const rating = get(props, 'item.info.rating.average', null);\n  const type = get(props, 'item.info.type', '');\n  const officialSite = get(props, 'item.info.officialSite', '');\n  const genres = get(props, 'item.info.genres', []).join(', ');\n  const production = get(props, 'item.info.network.name', '');\n  const country = get(props, 'item.info.network.country.name', '');\n  const scheduleTime = get(props, 'item.info.schedule.time', '');\n  const scheduleDays = get(props, 'item.info.schedule.days', []).join(', ');\n  const timezone = get(props, 'item.info.network.country.timezone', '');\n\n  useEffect(() => {\n    id && getCastByShowId(id)\n  }, [id])\n\n  if (!Object.keys(props.item).length) return <Empty/>\n\n  return (\n    <>\n      <Row justify='center' style={{marginTop: 130, marginBottom: 30}}>\n        <h1>{name}</h1>\n      </Row>\n      <Row justify='space-around'>\n        <div>\n          <Image\n            src={imageOriginal || imageMedium}\n            preview={false}\n            width={350}\n            placeholder\n          />\n          <div>IMDb Rating</div>\n          <Rate\n            style={{display: 'block'}}\n            disabled\n            allowHalf\n            value={Math.round(rating * 2) / 2}\n            count={10}\n          />\n        </div>\n        <Descriptions size='default' column={1} style={{maxWidth: '600px'}}>\n          <Descriptions.Item label={<b>Released</b>}>{release}</Descriptions.Item>\n          <Descriptions.Item label={<b>Show Type</b>}>{type}</Descriptions.Item>\n          <Descriptions.Item label={<b>Genre</b>}>{genres || 'N/A'}</Descriptions.Item>\n          <Descriptions.Item label={<b>Language</b>}>{language}</Descriptions.Item>\n          <Descriptions.Item label={<b>Country</b>}>{country}</Descriptions.Item>\n          <Descriptions.Item label={<b>Network</b>}>\n            <a target=\"_blank\" href={officialSite}>{production}</a>\n          </Descriptions.Item>\n          <Descriptions.Item label={<b>Status</b>}>{status}</Descriptions.Item>\n          <Descriptions.Item label={<b>Duration</b>}>{runtime} min</Descriptions.Item>\n          <Descriptions.Item label={<b>Schedule</b>}>\n            Every {scheduleDays} at {scheduleTime} ({timezone})\n          </Descriptions.Item>\n        </Descriptions>\n        <div style={{margin: 30}} dangerouslySetInnerHTML={{__html: summary}}/>\n      </Row>\n      <CastList cast={cast}/>\n    </>\n  )\n}\n\nconst mapStateToProps = (state: any) => ({\n  item: state.currentItem\n})\n\nconst mapDispatchToProps = (dispatch: any) => ({\n  getCastByShowId: (payload: number) => dispatch(getCastByShowIdDispatcher(payload)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShowsListItemPage)\n","import * as React from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport 'antd/dist/antd.css'\nimport { Container } from '@material-ui/core'\nimport { Layout, Row } from 'antd'\nimport Search from './Search'\nimport MoviesList from './movies/MoviesList'\nimport HeaderPanel from './HeaderPanel'\nimport MoviesListItemPage from './movies/MoviesListItemPage'\nimport { Slider } from './Slider'\nimport ShowsList from \"./shows/ShowsList\";\nimport ShowsListItemPage from \"./shows/ShowsListItemPage\";\n\nconst { Content, Footer } = Layout\nconst BASE_URL = process.env.PUBLIC_URL;\n\n\nfunction App () {\n\n  return (\n    <Router basename={BASE_URL}>\n      <div className=\"App\">\n        <Layout>\n          <HeaderPanel/>\n          <Content style={{ background: 'white', minHeight: 'calc(100vh - 55px)' }}>\n            <Slider/>\n            <Container>\n              <Row justify={'center'} style={{display: 'grid'}}>\n                <Search/>\n                <Route exact path=\"/movies\">\n                  <MoviesList/>\n                </Route>\n                <Route exact path=\"/shows\">\n                  <ShowsList/>\n                </Route>\n              </Row>\n              <Route path=\"/movies/:id\">\n                <MoviesListItemPage/>\n              </Route>\n              <Route path=\"/shows/:id\">\n                <ShowsListItemPage/>\n              </Route>\n            </Container>\n          </Content>\n          <Footer>Movie ©2021 Created by Ivan Skotar</Footer>\n        </Layout>\n      </div>\n    </Router>\n  )\n}\n\nexport default App\n","const initialState: IState = {\n  list: [],\n  page: 1,\n  totalResults: 0,\n  title: '',\n  error: null\n}\n\nexport interface IState {\n  list: [];\n  page: number;\n  totalResults: number;\n  title: string;\n  error: string | null;\n}\n\ninterface IAction {\n  type: string;\n  payload: {\n    title: string;\n    page: number;\n    response: any;\n  }\n}\n\nexport default function movieSearchResult(state = initialState, action: IAction) {\n  switch (action.type) {\n    case 'BY_QUERY':\n      if(!action.payload.title.length) return { ...state, error: 'Please, enter the movie title'};\n      if(action.payload.response.Error) return { ...state, error: action.payload.response.Error};\n      return {\n        ...state,\n        list: [...action.payload.response.Search],\n        page: action.payload.page || state.page,\n        totalResults: action.payload.response.totalResults,\n        title: action.payload.title\n      }\n\n    case 'CLEAR_ERROR':\n      return {...state, error: ''}\n    default:\n      return state\n  }\n}\n","import {IMovieListItem, IShowsItem} from \"../../components/types\";\n\ninterface IAction {\n  type: string;\n  payload: any\n}\n\nexport interface IState {\n  currentItem: {\n    info: IMovieListItem | IShowsItem;\n    cast: any[];\n  };\n}\n\nconst initialState = {\n  info: {},\n  cast: []\n}\n\nexport default function currentItem(state = initialState, action:IAction) {\n  switch (action.type) {\n    case 'BY_ID':\n      return {\n        ...state,\n        info: action.payload\n      }\n\n    case 'CAST':\n      console.log(action.payload)\n      return {\n        ...state,\n        cast: [...action.payload]\n      }\n\n    default:\n      return state\n  }\n}\n","import {IShowsItem} from \"../../../components/types\";\n\nconst initialState: IState = {\n  list: [],\n  page: 1,\n  totalResults: 0,\n  title: '',\n  error: null\n}\n\nexport interface IState {\n  list: [];\n  page: number;\n  totalResults: number;\n  title: string;\n  error: string | null;\n}\n\ninterface IAction {\n  type: string;\n  payload: {\n    title: string;\n    page: number;\n    response: any;\n  }\n}\n\nexport default function showsSearchResult(state = initialState, action: IAction) {\n  switch (action.type) {\n    case 'SHOW_BY_QUERY':\n      return {\n        ...state,\n        list: action.payload.response.map((el: { show: IShowsItem }) => el.show),\n        page: action.payload.page || state.page,\n        totalResults: action.payload.response.length,\n        title: action.payload.title\n      }\n\n    default:\n      return state\n  }\n}\n","import { combineReducers } from 'redux'\nimport movieSearchResult from './reducers/movies/MovieSearchResult'\nimport currentItem from './reducers/currentItem'\nimport showsSearchResult from \"./reducers/shows/ShowsSearchResult\";\n\nexport const rootReducer = combineReducers({\n  movieSearchResult,\n  showsSearchResult,\n  currentItem\n})\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { rootReducer } from './reducers';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk)\n  )\n)\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport { Provider } from 'react-redux'\nimport store from './redux/store'\nimport './index.css'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App/>\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}